{"ast":null,"code":"var _jsxFileName = \"/home/live/visualstudio/chatbot_react/chatbot_django_react/chatbot-app/src/components/Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport styles from '../styles/Chatbot.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const inputRef = useRef(null);\n  const lastMessageRef = useRef(null);\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([{\n    text: '¡Bienvenido al chatbot!',\n    sender: 'bot'\n  }]);\n  const [isBotTyping, setIsBotTyping] = useState(false);\n  const messagesContainerRef = useRef(null);\n  const scrollToBottom = () => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = async event => {\n    event.preventDefault();\n    if (isBotTyping) {\n      return; // No se permite enviar mensajes mientras el bot está escribiendo\n    }\n\n    const inputMessage = event.target.message.value.trim();\n    if (inputMessage !== '') {\n      const messageWithLineBreak = inputMessage + '\\n';\n      setMessages(prevMessages => [...prevMessages, {\n        text: messageWithLineBreak,\n        sender: 'user'\n      }]);\n      event.target.reset();\n      try {\n        setIsBotTyping(true);\n        const botResponse = await sendMessageToBackend(inputMessage);\n        setMessages(prevMessages => [...prevMessages, {\n          text: botResponse,\n          sender: 'bot',\n          isTyping: true\n        }]);\n\n        // Simular efecto de escritura\n        for (let i = 0; i < botResponse.length; i++) {\n          await delay(40); // Esperar 100ms entre cada carácter\n          setMessages(prevMessages => [...prevMessages.slice(0, -1),\n          // Eliminar el último mensaje (el mensaje \"isTyping\")\n          {\n            text: botResponse.substring(0, i + 1),\n            sender: 'bot',\n            isTyping: true\n          }]);\n        }\n        setMessages(prevMessages => [...prevMessages.slice(0, -1),\n        // Eliminar el mensaje \"isTyping\"\n        {\n          text: botResponse,\n          sender: 'bot'\n        }]);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsBotTyping(false);\n      }\n    }\n  };\n  const sendMessageToBackend = async message => {\n    try {\n      const response = await axios.post('http://localhost:8000/chat/send-message/', {\n        message\n      });\n      if (response.status === 200) {\n        const botResponse = response.data.message;\n        if (botResponse) {\n          return botResponse;\n        } else {\n          console.error('La respuesta del bot no tiene una propiedad \"message\"');\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleRedirect = () => {\n    navigate('/ChatbotApp');\n  };\n  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles['chatbot-container'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['messages-container-wrapper'],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"messages-container\",\n        className: styles['messages-container'],\n        ref: messagesContainerRef,\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles['message']} ${message.sender === 'user' ? styles['user'] : styles['bot']}`,\n          style: {\n            backgroundColor: message.color\n          },\n          ref: index === messages.length - 1 ? lastMessageRef : null,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${styles['message-text']} ${message.sender === 'bot' ? styles['typing-animation'] : ''}`,\n            children: [message.text, message.isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles['typing-indicator']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: lastMessageRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        name: \"message\",\n        placeholder: \"Escribe un mensaje...\",\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['input-group-space']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${styles['button-goto-chatbot']}`,\n      onClick: handleRedirect,\n      children: \"Ir a ChatbotApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"cDudv+8lJxKDEZauPlu25lpnzSQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useNavigate","styles","jsxDEV","_jsxDEV","Chatbot","_s","inputRef","lastMessageRef","navigate","messages","setMessages","text","sender","isBotTyping","setIsBotTyping","messagesContainerRef","scrollToBottom","current","scrollIntoView","behavior","handleSendMessage","event","preventDefault","inputMessage","target","message","value","trim","messageWithLineBreak","prevMessages","reset","botResponse","sendMessageToBackend","isTyping","i","length","delay","slice","substring","error","console","response","post","status","data","handleRedirect","ms","Promise","resolve","setTimeout","className","children","id","ref","map","index","style","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","autoFocus","onClick","_c","$RefreshReg$"],"sources":["/home/live/visualstudio/chatbot_react/chatbot_django_react/chatbot-app/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport styles from '../styles/Chatbot.module.css';\n\nconst Chatbot = () => {\n  const inputRef = useRef(null);\n  const lastMessageRef = useRef(null);\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([{ text: '¡Bienvenido al chatbot!', sender: 'bot' }]);\n  const [isBotTyping, setIsBotTyping] = useState(false);\n  const messagesContainerRef = useRef(null);\n\n  const scrollToBottom = () => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSendMessage = async (event) => {\n    event.preventDefault();\n    if (isBotTyping) {\n      return; // No se permite enviar mensajes mientras el bot está escribiendo\n    }\n    const inputMessage = event.target.message.value.trim();\n    if (inputMessage !== '') {\n      const messageWithLineBreak = inputMessage + '\\n';\n      setMessages((prevMessages) => [...prevMessages, { text: messageWithLineBreak, sender: 'user' }]);\n      event.target.reset();\n  \n      try {\n        setIsBotTyping(true);\n        const botResponse = await sendMessageToBackend(inputMessage);\n        setMessages((prevMessages) => [...prevMessages, { text: botResponse, sender: 'bot', isTyping: true }]);\n  \n        // Simular efecto de escritura\n        for (let i = 0; i < botResponse.length; i++) {\n          await delay(40); // Esperar 100ms entre cada carácter\n          setMessages((prevMessages) => [\n            ...prevMessages.slice(0, -1), // Eliminar el último mensaje (el mensaje \"isTyping\")\n            {\n              text: botResponse.substring(0, i + 1),\n              sender: 'bot',\n              isTyping: true,\n            },\n          ]);\n        }\n  \n        setMessages((prevMessages) => [\n          ...prevMessages.slice(0, -1), // Eliminar el mensaje \"isTyping\"\n          { text: botResponse, sender: 'bot' },\n        ]);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsBotTyping(false);\n      }\n    }\n  };\n    \n  const sendMessageToBackend = async (message) => {\n    try {\n      const response = await axios.post('http://localhost:8000/chat/send-message/', { message });\n      if (response.status === 200) {\n        const botResponse = response.data.message;\n        if (botResponse) {\n          return botResponse;\n        } else {\n          console.error('La respuesta del bot no tiene una propiedad \"message\"');\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleRedirect = () => {\n    navigate('/ChatbotApp');\n  };\n\n  const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n\n  return (\n    <div className={styles['chatbot-container']}>\n      <div className={styles['messages-container-wrapper']}>\n        <div id=\"messages-container\" className={styles['messages-container']} ref={messagesContainerRef}>\n          {messages.map((message, index) => (\n            <div\n              key={index}\n              className={`${styles['message']} ${message.sender === 'user' ? styles['user'] : styles['bot']}`}\n              style={{ backgroundColor: message.color }}\n              ref={index === messages.length - 1 ? lastMessageRef : null}\n            >\n              <span\n                className={`${styles['message-text']} ${message.sender === 'bot' ? styles['typing-animation'] : ''}`}\n              >\n                {message.text}\n                {message.isTyping && <span className={styles['typing-indicator']}></span>}\n              </span>\n            </div>\n          ))}\n          <div ref={lastMessageRef}></div>\n        </div>\n      </div>\n      <form onSubmit={handleSendMessage}>\n        <input ref={inputRef} type=\"text\" name=\"message\" placeholder=\"Escribe un mensaje...\" autoFocus />\n        <button type=\"submit\">Enviar</button>\n      </form>\n      <div className={styles['input-group-space']}></div>\n      <button className={`${styles['button-goto-chatbot']}`} onClick={handleRedirect}>\n        Ir a ChatbotApp\n      </button>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}