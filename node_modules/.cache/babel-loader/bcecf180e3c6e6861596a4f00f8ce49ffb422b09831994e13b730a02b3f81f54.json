{"ast":null,"code":"var _jsxFileName = \"/home/live/visualstudio/chatbot_react/chatbot_django_react/chatbot-app/src/App.js\",\n  _s = $RefreshSig$();\nimport ChatbotApp from './ChatbotApp';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './styles/Chatbot.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([{\n    text: '¡Bienvenido al chatbot!',\n    sender: 'bot'\n  }]);\n  const [isBotWriting, setIsBotWriting] = useState(false);\n  const messagesContainerRef = useRef(null);\n  const scrollToBottom = () => {\n    if (messagesContainerRef.current) {\n      messagesContainerRef.current.scrollTop = messagesContainerRef.current.scrollHeight;\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSendMessage = async event => {\n    event.preventDefault();\n    const inputMessage = event.target.message.value.trim();\n    if (inputMessage !== '') {\n      setMessages(prevMessages => [{\n        text: inputMessage + '\\n',\n        sender: 'user'\n      }, ...prevMessages]);\n      event.target.reset();\n      setIsBotWriting(true);\n      try {\n        const botResponse = await sendMessageToBackend(inputMessage);\n        let responseSubstring = '';\n        for (let i = 0; i < botResponse.length; i++) {\n          await wait(100);\n          responseSubstring += botResponse.charAt(i);\n          if (i === botResponse.length - 1) {\n            setMessages(prevMessages => [...prevMessages.slice(0, -1), {\n              text: responseSubstring,\n              sender: 'bot'\n            }]);\n          } else {\n            setMessages(prevMessages => [...prevMessages.slice(0, -1), {\n              text: responseSubstring,\n              sender: 'bot'\n            }]);\n          }\n          scrollToBottom();\n        }\n      } catch (error) {\n        console.error(error);\n      }\n      setIsBotWriting(false);\n      event.target.message.focus();\n    }\n  };\n  const sendMessageToBackend = async message => {\n    try {\n      const response = await axios.post('http://localhost:8000/chat/send-message/', {\n        message\n      });\n      if (response.status === 200) {\n        const botResponse = response.data.message;\n        if (botResponse) {\n          return botResponse;\n        } else {\n          console.error('La respuesta del bot no tiene una propiedad \"message\"');\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const wait = ms => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  };\n  const handleRedirect = () => {\n    navigate('/ChatbotApp');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles['chatbot-container'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"messages-container\",\n      className: styles['messages-container'],\n      ref: messagesContainerRef,\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles['message']} ${message.sender === 'user' ? styles['user'] : styles['bot']}`,\n        style: {\n          backgroundColor: message.color\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles['message-text'],\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        placeholder: \"Escribe un mensaje...\",\n        disabled: isBotWriting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isBotWriting,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['input-group-space']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles['button-goto-chatbot'],\n      onClick: handleRedirect,\n      children: \"Ir a ChatbotApp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"8T7Sqv3rLNIPYOA4CfAdCYbXXxk=\", false, function () {\n  return [useNavigate];\n});\n_c = Chatbot;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['App'],\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Chatbot, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/ChatbotApp\",\n          element: /*#__PURE__*/_jsxDEV(ChatbotApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chatbot\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["ChatbotApp","React","useState","useEffect","useRef","BrowserRouter","Router","Route","Routes","useNavigate","axios","styles","jsxDEV","_jsxDEV","Chatbot","_s","navigate","messages","setMessages","text","sender","isBotWriting","setIsBotWriting","messagesContainerRef","scrollToBottom","current","scrollTop","scrollHeight","handleSendMessage","event","preventDefault","inputMessage","target","message","value","trim","prevMessages","reset","botResponse","sendMessageToBackend","responseSubstring","i","length","wait","charAt","slice","error","console","focus","response","post","status","data","ms","Promise","resolve","setTimeout","handleRedirect","className","children","id","ref","map","index","style","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","disabled","onClick","_c","App","path","element","_c2","$RefreshReg$"],"sources":["/home/live/visualstudio/chatbot_react/chatbot_django_react/chatbot-app/src/App.js"],"sourcesContent":["import ChatbotApp from './ChatbotApp';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './styles/Chatbot.module.css';\n\nconst Chatbot = () => {\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([{ text: '¡Bienvenido al chatbot!', sender: 'bot' }]);\n  const [isBotWriting, setIsBotWriting] = useState(false);\n  const messagesContainerRef = useRef(null);\n\n  const scrollToBottom = () => {\n    if (messagesContainerRef.current) {\n      messagesContainerRef.current.scrollTop = messagesContainerRef.current.scrollHeight;\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSendMessage = async (event) => {\n    event.preventDefault();\n    const inputMessage = event.target.message.value.trim();\n    \n    if (inputMessage !== '') {\n      setMessages((prevMessages) => [\n        { text: inputMessage + '\\n', sender: 'user' },\n        ...prevMessages,\n      ]);\n  \n      event.target.reset();\n      setIsBotWriting(true);\n  \n      try {\n        const botResponse = await sendMessageToBackend(inputMessage);\n        let responseSubstring = '';\n  \n        for (let i = 0; i < botResponse.length; i++) {\n          await wait(100);\n          responseSubstring += botResponse.charAt(i);\n  \n          if (i === botResponse.length - 1) {\n            setMessages((prevMessages) => [\n              ...prevMessages.slice(0, -1),\n              { text: responseSubstring, sender: 'bot' },\n            ]);\n          } else {\n            setMessages((prevMessages) => [\n              ...prevMessages.slice(0, -1),\n              { text: responseSubstring, sender: 'bot' },\n            ]);\n          }\n  \n          scrollToBottom();\n        }\n      } catch (error) {\n        console.error(error);\n      }\n  \n      setIsBotWriting(false);\n      event.target.message.focus();\n    }\n  };\n  \n\n  const sendMessageToBackend = async (message) => {\n    try {\n      const response = await axios.post('http://localhost:8000/chat/send-message/', { message });\n      if (response.status === 200) {\n        const botResponse = response.data.message;\n        if (botResponse) {\n          return botResponse;\n        } else {\n          console.error('La respuesta del bot no tiene una propiedad \"message\"');\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const wait = (ms) => {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  };\n\n  const handleRedirect = () => {\n    navigate('/ChatbotApp');\n  };\n\n  return (\n    <div className={styles['chatbot-container']}>\n      <div id=\"messages-container\" className={styles['messages-container']} ref={messagesContainerRef}>\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`${styles['message']} ${message.sender === 'user' ? styles['user'] : styles['bot']}`}\n            style={{ backgroundColor: message.color }}\n          >\n            <span className={styles['message-text']}>{message.text}</span>\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSendMessage}>\n        <input\n          type=\"text\"\n          name=\"message\"\n          placeholder=\"Escribe un mensaje...\"\n          disabled={isBotWriting}\n        />\n        <button type=\"submit\" disabled={isBotWriting}>Enviar</button>\n      </form>\n      <div className={styles['input-group-space']}></div> {/* Espacio adicional */}\n      <button className={styles['button-goto-chatbot']} onClick={handleRedirect}>\n        Ir a ChatbotApp\n      </button>\n    </div>\n  );\n};\n\nconst App = () => {\n  return (\n    <Router>\n      <div className={styles['App']}>\n        <h1>Chatbot</h1>\n        <Routes>\n          <Route path=\"/\" element={<Chatbot />} />\n          <Route path=\"/ChatbotApp\" element={<ChatbotApp />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}